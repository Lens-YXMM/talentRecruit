<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.recruit.data.dao.ResumeWorkMapper">
  <resultMap id="BaseResultMap" type="com.recruit.data.pojo.ResumeWork">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="resume_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="department" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="position" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="responsibility" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="start" javaType="java.util.Date" jdbcType="DATE" />
      <arg column="end" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="create_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="update_time" javaType="java.util.Date" jdbcType="TIMESTAMP" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, resume_id, name, department, position, responsibility, start, end, create_time, 
    update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from resume_work
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from resume_work
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.recruit.data.pojo.ResumeWork">
    insert into resume_work (id, resume_id, name, 
      department, position, responsibility, 
      start, end, create_time, 
      update_time)
    values (#{id,jdbcType=INTEGER}, #{resumeId,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{department,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{responsibility,jdbcType=VARCHAR}, 
      #{start,jdbcType=DATE}, #{end,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.recruit.data.pojo.ResumeWork">
    insert into resume_work
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="resumeId != null">
        resume_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="position != null">
        position,
      </if>
      <if test="responsibility != null">
        responsibility,
      </if>
      <if test="start != null">
        start,
      </if>
      <if test="end != null">
        end,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="resumeId != null">
        #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="responsibility != null">
        #{responsibility,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        #{start,jdbcType=DATE},
      </if>
      <if test="end != null">
        #{end,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.recruit.data.pojo.ResumeWork">
    update resume_work
    <set>
      <if test="resumeId != null">
        resume_id = #{resumeId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="position != null">
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="responsibility != null">
        responsibility = #{responsibility,jdbcType=VARCHAR},
      </if>
      <if test="start != null">
        start = #{start,jdbcType=DATE},
      </if>
      <if test="end != null">
        end = #{end,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.recruit.data.pojo.ResumeWork">
    update resume_work
    set resume_id = #{resumeId,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      responsibility = #{responsibility,jdbcType=VARCHAR},
      start = #{start,jdbcType=DATE},
      end = #{end,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>